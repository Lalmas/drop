<?xml version="1.0"?>
<article xmlns="http://docbook.org/ns/docbook" 
	 xmlns:xlink="http://www.w3.org/1999/xlink">
  <section>
    <title>Packages</title>
    <section>
      <title>Package Distribution Model</title>
      <para>
	Most operating systems distribute software in the form of packages. At a high-level, each package defines prerequisites packages that need to be installed on the system before it, itself, can be used. The operating system uses a package manager to analyze the packages dependency graph and determine how to update the local system based on an end-user selection.</para>
      <para>
	Software is always in an ever-evolving state. In order to keep a local system up-to-date with latest available features and fixes, software is tested, built, packaged and stored on remote update servers. Each package comes with a small specification file that primary contains information about a package prerequisite dependencies. The remote server aggregates all specification files into a small index file that contains the packages dependency graph. On a local system update, the local package manager downloads the index file and through the analysis of the packages dependency graph, decides to download actual packages and install them on the local system.</para>
    </section>
    <section>
      <title>Distribution Specific Package Management</title>
      <para>
      </para>
      <table>
	<caption>Package Managers by OS distribution</caption>
	<tbody>
	<tr>
	  <td></td>
	  <td><link xlink:href="http://www.ubuntu.com">Ubuntu</link></td>
	  <td><link xlink:href="http://www.fedoraproject.org/">Fedora</link></td>
	  <td>OSX</td>
	  <td>Windows</td>
	</tr>
	<tr>
	  <th>Update tool</th>
	  <td><link xlink:href="https://help.ubuntu.com/community/SwitchingToUbuntu/FromLinux/%20RedHatEnterpriseLinuxAndFedora">apt-*</link>, aptitude</td>
	  <td><link xlink:href="http://www.phy.duke.edu/~rgb/General/yum_HOWTO/yum_HOWTO/yum_HOWTO-1.html">yum</link></td>
	  <td>There is no official update tool for all software deployed on an OSX platform even though packaging projects as disk images is a common practise.</td>
	  <td>There is no official update tool for all software deployed on a Windows platform. <link xlink:href="http://wwww.cygwin.com">Cygwin</link> has become a de-facto manager for open source packages. <link xlink:href="http://www.nabber.org/projects/cyg-get/">cyg-get.py</link> is a command-line tool very convenient to update packages from the command-line.</td>
	</tr>
	<tr>
	  <th>Package format</th>
	  <td><link xlink:href="http://synthesize.us/HOWTO_make_a_deb_archive_without_dpkg">.deb</link> file</td>
	  <td>.rpm file</td>
	  <td>.pkg file bundled as a .dmg</td>
	  <!-- http://freshmeat.net/projects/macports -->
	  <td>.tar.bz2</td>
	</tr>
	<tr>
	  <th>Index</th>
	  <td><link xlink:href="http://mirrors.us.kernel.org/ubuntu/dists/jaunty/main/binary-amd64/Packages.bz2">Packages.bz2</link></td>
	  <td><link xlink:href="http://mirrors.us.kernel.org/fedora/releases/11/Fedora/x86_64/os/repodata/">repodata/</link></td>
	  <td><link xlink:href="http://www.apple.com/downloads/">Apple Website</link></td>
	  <td><link xlink:href="http://cygwin.elite-systems.org/setup.ini">setup.ini</link>,
	    <link xlink:href="http://cygwin.elite-systems.org/setup-2.ini">setup-2.ini</link></td>
	</tr>
	<tr><td colspan="5"><emphasis>Building packages</emphasis></td></tr>
	<tr>
	  <th>Guidelines</th>
	  <td><link xlink:href="http://www.debian-administration.org/articles/336">Rolling your own Debian package</link>, <link xlink:href="https://wiki.ubuntu.com/PackagingGuide">Rolling your own Ubuntu package</link></td>
	  
	  <td><link xlink:href="http://www.rpm.org/max-rpm/index.html">RedHat Package Manager</link>, <link xlink:href="http://docs.fedoraproject.org/developers-guide/ch-rpm-building.html">Building Fedora RPM Packages</link>, <link xlink:href="https://fedoraproject.org/wiki/Packaging/Guidelines"> Packaging guidelines</link></td>
	  
	  <td><link xlink:href="http://developer.apple.com/documentation/developertools/conceptual/SoftwareDistribution/Introduction/Introduction.html#//apple_ref/doc/uid/10000145i-CH1-DontLinkElementID_69">Packaging and Distribution Software</link> by Apple, <link xlink:href="http://developer.apple.com/documentation/Darwin/Reference/Manpages/man1/packagemaker.1.html">packagemaker man pages</link></td>
	  
	  <td><link xlink:href="http://cygwin.com/setup.html">Cygwin Package Contributor&quot;s Guide</link></td>
	</tr>
	
	<tr>
	  <th>Control files</th>
	  <td>debian/ directory in source tree</td>
	  <td><link xlink:href="http://fedoraproject.org/wiki/Packaging/NamingGuidelines">%{name}.spec</link></td>
	  <td>files in the pkg tree</td>
	  <td>three methods and a setup.hint file</td>
	</tr>
	<tr>
	  <td>Building commands</td>
	  <td><para role="code">cd %name &amp;&amp; debuild</para>
	  </td>
	  
	  <td>
	    <para role="code">
	      yum install rpmdevtools
	      rpmdev-setuptree
	      rpmbuild -bb --clean %name.spec
	    </para>
	  </td>
	  <td>Good starting point reading through <link xlink:href="http://python.net/~gherman/projects/buildpkg/">buildpkg.py</link>
	  </td>
	  
	  <td>
	    <para role="code">cygport %name all</para>
	  </td>
	</tr>
	<tr>
	  <th>Creating remote repository</th>
	  <td><link xlink:href="http://www.debian.org/doc/manuals/repository-howto/repository-howto.en.html">Debian Repository HOWTO</link></td>
	  <td><link xlink:href="http://sial.org/howto/rpm/">RedHat Package Manager Tips</link>, <link xlink:href="http://www.linux.com/feature/37660">How to run your own yum repository</link>. In modern Fedora distribution, yum-arch has been replaced by createrepo.</td>
	  <td>None</td>
	  <td>None</td>
	</tr>
	</tbody>
      </table>
    </section>

    <section>
      <title>Random notes</title>
      <para>Information for <link xlink:href="https://www.gerts.net/sysconf/pkgupdate/">Solaris package management</link> is also available. The update tool is called <link xlink:href="http://www.bolthole.com/solaris/pkg-get.html">pkg-get</link>.</para>
      <para>
	I've been trying cyg-apt but it turned out it seemed old. Cyg-get.py uses optparse so the command line syntax is quite strange for a package manager tool but it worked very well.</para>
      <para>Most times, recent packages cannot be found in cygwin but are available in <link xlink:href="http://www.cygwinports.org/">cygwinports</link>. Since both sites are using the same distribution model, cyg-get.py can be used to download for either one.
      </para>
      <para>
	All software compiled for Windows using cygwin need to be delivered with the cygwin.dll. On the other hand, <link xlink:href="http://www.mingw.com">mingwin</link> uses native win32 calls directly.</para>
      <para>Looking at <link xlink:href="http://trac.project-builder.org/">Project-Builder.org</link> might be a good step to find more details information. These perl scripts aim to provide support to automate packaging for different distribution.</para>
      <para>updated by <link xlink:href="/contributors/smirolo/profile.book">Sebastien Mirolo</link> on July 25th, 2009</para>
    </section>
  </section>
</article>
