---
# This playbook creates the security groups and IAM roles in which
# the services will be deployed. It will also enable CloudTrail for the region.
#
# Requires definition of:
#  - tag_prefix: Prefix for a logical group, ex: dev-, stage-, etc.
#  - aws_region: Region in which this local group is deployed.
#  - key_name: Key used to first ssh into an ec2 instance

- name: Upload key pair, create roles and security groups, enable CloudTrail.
  hosts: localhost
  connection: local
  gather_facts: False
  tasks:
  - name: Import key pair to connect to EC2 instances
    local_action:
      module: ec2_key
      name: "{{key_name}}"
      region: "{{aws_region}}"
      key_material: "{{item}}"
    with_file: ~/.ssh/{{key_name}}.pub
  - name: Create 'kitchen-door' security group
    local_action:
      module: ec2_group
      name: "{{tag_prefix}}kitchen-door"
      description: "Monitoring services"
      region: "{{aws_region}}"
      rules:
        - proto: tcp
          type: ssh
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          type: all
          cidr_ip: 0.0.0.0/0
    register: kitchen-door
  - name: Create 'castle-gate' security group
    local_action:
      module: ec2_group
      name: "{{tag_prefix}}castle-gate"
      description: "Web facing services"
      region: "{{aws_region}}"
      rules:
        - proto: tcp
          type: http
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          type: http
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          type: ssh
          from_port: 22
          to_port: 22
          cidr_ip: kitchen-door
      rules_egress:
        - proto: all
          type: all
          cidr_ip: 0.0.0.0/0
    register: castle-gate
  - name: Create 'vault' security group
    local_action:
      module: ec2_group
      name: "{{tag_prefix}}vault"
      description: "LDAP and SQL Databases"
      region: "{{aws_region}}"
      rules:
        - proto: tcp
          type: ssh
          from_port: 22
          to_port: 22
          cidr_ip: kitchen-door
        - proto: tcp
          from_port: 5432
          to_port: 5432
          src_group_name: castle-gate
      rules_egress:
        - proto: all
          type: all
          cidr_ip: 0.0.0.0/0
    register: vault
  - name: Create 'courtyard' security group
    local_action:
      module: ec2_group
      name: "{{tag_prefix}}courtyard"
      description: "Transient workers"
      region: "{{aws_region}}"
      rules:
        - proto: tcp
          type: ssh
          from_port: 22
          to_port: 22
          cidr_ip: kitchen-door
        - proto: tcp
          type: http
          from_port: 80
          to_port: 80
          src_group_name: castle-gate
      rules_egress:
        - proto: all
          type: all
          cidr_ip: 0.0.0.0/0
    register: courtyard
  - name: Create 'watch-tower' security group
    local_action:
      module: ec2_group
      name: "{{tag_prefix}}watch-tower"
      description: "Email services"
      region: "{{aws_region}}"
      rules:
        - proto: tcp
          type: ssh
          from_port: 25
          to_port: 25
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          type: ssh
          from_port: 22
          to_port: 22
          cidr_ip: kitchen-door
        - proto: tcp
          type: ldap
          from_port: 636
          to_port: 636
          cidr_ip: castle-gate,vault,courtyard,kitchen-door
      rules_egress:
        - proto: all
          type: all
          cidr_ip: 0.0.0.0/0
    register: watch-tower

  # XXX There is no Ansible module for IAM yet so we resort to execute
  #     the appropriate commands on the shell.
  - name: Create 'kitchen-door' role
    local_action:
      module: command
        - aws --region {{aws_region}} iam create-role --role-name {{tag_prefix}}kitchen-door --assume-role-policy-document file://assume-role-policy.json
        - aws --region {{aws_region}} iam create-instance-profile --instance-profile-name {{tag_prefix}}kitchen-door-profile
        - aws --region {{aws_region}} iam add-role-to-instance-profile --role-name {{tag_prefix}}kitchen-door --instance-profile-name {{tag_prefix}}kitchen-door-profile

  - name: Create 'castle-gate' role
    local_action:
      module: command
        - aws --region {{aws_region}} iam create-role --role-name {{tag_prefix}}castle-gate --assume-role-policy-document file://assume-role-policy.json
        - aws --region {{aws_region}} iam create-instance-profile --instance-profile-name {{tag_prefix}}castle-gate-profile
        - aws --region {{aws_region}} iam add-role-to-instance-profile --role-name {{tag_prefix}}castle-gate --instance-profile-name {{tag_prefix}}castle-gate-profile

  - name: Create 'vault' role
    local_action:
      module: command
        - aws --region {{aws_region}} iam create-role --role-name {{tag_prefix}}vault --assume-role-policy-document file://assume-role-policy.json
        - aws --region {{aws_region}} iam create-instance-profile --instance-profile-name {{tag_prefix}}vault-profile
        - aws --region {{aws_region}} iam add-role-to-instance-profile --role-name {{tag_prefix}}vault --instance-profile-name {{tag_prefix}}vault-profile

  - name: Create 'courtyard' role
    local_action:
      module: command
        - aws --region {{aws_region}} iam create-role --role-name {{tag_prefix}}courtyard --assume-role-policy-document file://assume-role-policy.json
        - aws --region {{aws_region}} iam create-instance-profile --instance-profile-name {{tag_prefix}}courtyard-profile
        - aws --region {{aws_region}} iam add-role-to-instance-profile --role-name {{tag_prefix}}courtyard --instance-profile-name {{tag_prefix}}courtyard-profile

  - name: Create 'watch-tower' role
    local_action:
      module: command
        - aws --region {{aws_region}} iam create-role --role-name {{tag_prefix}}watch-tower --assume-role-policy-document file://assume-role-policy.json
        - aws --region {{aws_region}} iam create-instance-profile --instance-profile-name {{tag_prefix}}watch-tower-profile
        - aws --region {{aws_region}} iam add-role-to-instance-profile --role-name {{tag_prefix}}watch-tower --instance-profile-name {{tag_prefix}}watch-tower-profile

  - name: Enable CloudTrail
    local_action:
      module: cloudtrail
      name: "{{tag_prefix}}cloudtrail"
      region: "{{aws_region}}"
      s3_bucket_name: "{{tag_prefix}}deployutils"
      s3_key_prefix: log/cloudtrail
      state: enabled
